# $FreeBSD$
#
# Refer to devd.conf(5) and devd(8) man pages for the details on how to
# run and configure devd.
#

# NB: All regular expressions have an implicit ^$ around them.
# NB: device-name is shorthand for 'match device-name'

options {
	# Each "directory" directive adds a directory to the list of
	# directories that we scan for files.  Files are loaded in the order
	# that they are returned from readdir(3).  The rule-sets are combined
	# to create a DFA that's used to match events to actions.
	directory "/etc/devd";
	directory "/usr/local/etc/devd";
	pid-file "/var/run/devd.pid";

	# Setup some shorthand for regex that we use later in the file.
	#XXX Yes, these are gross -- imp
	set scsi-controller-regex
		"(aac|aacraid|ahc|ahd|amr|ciss|\
		esp|ida|iir|ips|isp|mlx|mly|mpr|mps|mpt|sym|trm)\
		[0-9]+";
	set wifi-driver-regex
		"(ath|bwi|bwn|ipw|iwi|iwm|iwn|malo|mwl|otus|ral|rsu|rtwn|rum|\
		run|uath|upgt|ural|urtw|wi|wpi|wtap|zyd)[0-9]+";
};

# Note that the attach/detach with the highest value wins, so that one can
# override these general rules.

# Create wlanN device, dhcpcd will take it from there
attach 0 {
	device-name "$wifi-driver-regex";
	action "ifconfig wlan create wlandev $device-name";
};

# TODO: bluetooth
attach 100 {
	device-name "ubt[0-9]+";
	action "service bluetooth quietstart $device-name";
};

detach 100 {
	device-name "ubt[0-9]+";
	action "service bluetooth quietstop $device-name";
};

# Firmware downloader for Atheros AR3011 based USB Bluetooth devices
attach 100 {
	match "vendor" "0x0cf3";
	match "product" "0x3000";
	action "sleep 2 && /usr/sbin/ath3kfw -d $device-name -f /usr/local/etc/ath3k-1.fw";
};

# Rescan SCSI device-names on attach, but not detach.
attach 0 {
	device-name "$scsi-controller-regex";
	action "camcontrol rescan all";
};

# Don't even try to second guess what to do about drivers that don't
# match here.  Instead, pass it off to syslog.  Commented out for the
# moment, as the pnpinfo variable isn't set in devd yet.  Individual
# variables within the bus supplied pnpinfo are set.
nomatch 0 {
#	action "logger Unknown device: $pnpinfo $location $bus";
};

# Various logging of unknown devices.
nomatch 10 {
	match "bus" "uhub[0-9]+";
	action "logger Unknown USB device: vendor $vendor product $product \
		bus $bus";
};

# Switch power profiles when the AC line state changes.
notify 10 {
	match "system"		"ACPI";
	match "subsystem"	"ACAD";
# action "service power_profile $notify";
};

# Notify all users before beginning emergency shutdown when we get
# a _CRT or _HOT thermal event and we're going to power down the system
# very soon.
notify 10 {
	match "system"		"ACPI";
	match "subsystem"	"Thermal";
	match "notify"		"0xcc";
	action "logger -p kern.emerg WARNING: system temperature too high, shutting down soon!";
};

# User requested suspend, so perform preparation steps and then execute
# the actual suspend process.
# TODO: complexd-logind will handle this
notify 10 {
	match "system"		"ACPI";
	match "subsystem"	"Suspend";
	action "/etc/rc.suspend acpi $notify";
};
notify 10 {
	match "system"		"ACPI";
	match "subsystem"	"Resume";
	action "/etc/rc.resume acpi $notify";
};
